<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc reference="PublicationWorkflow.Overview" locale="">
  <web>PublicationWorkflow</web>
  <name>Overview</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>PublicationWorkflow.WebHome</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1357902263000</creationDate>
  <date>1512376396000</date>
  <contentUpdateDate>1512376396000</contentUpdateDate>
  <version>1.1</version>
  <title>Vue d'ensemble</title>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}

#set($xwqlstatement = "from doc.object('PublicationWorkflow.PublicationWorkflowClass') as workflow")
#set($moderating = [])
#set($validating = [])
#set($drafts = {})
## Return all the results from the current wiki
#set($result = $services.query.xwql("$xwqlstatement").addFilter("unique").execute())
#foreach($item in $result)
  #set($workflowDoc = $xwiki.getDocument($item))
  #set($workflowObject = $workflowDoc.getObject('PublicationWorkflow.PublicationWorkflowClass'))
  #set($isTarget = $workflowObject.getProperty('istarget').value)
  #set($status = $workflowObject.getProperty('status').value)
  #if($isTarget == '0')
    #if($status == 'moderating' &amp;&amp; $services.publicationroles.canModerate($xcontext.user, $workflowDoc.prefixedFullName)) ##If the status is moderating and the current user has moderating rights
      #set($discard = $moderating.add($item))
    #elseif($status == 'validating' &amp;&amp; $services.publicationroles.canValidate($xcontext.user, $workflowDoc.prefixedFullName))
      #set($discard = $validating.add($item))
    #elseif($status == 'draft' &amp;&amp; $services.publicationroles.canContribute($xcontext.user, $workflowDoc.prefixedFullName))
      #set($discard = $drafts.put($item, $workflowDoc.displayTitle))
    #end
  #end
#end

#if($request.moderateAll == 'true')
  #set($fail = 0)
  #set($newModerating = [])
  #foreach($document in $moderating)
    #set($xdoc = $xwiki.getDocument($document))
    #set($docRef = $xdoc.getDocumentReference())
    #set($result = $services.publicationworkflow.submitForValidation($docRef))
    #if(!$result)
      {{warning}}$services.localization.render('workflow.overview.failValidate',[$xdoc]){{/warning}}
      #set($fail = 1) 
      #set($discard = $newModerating.add($document))
    #else
      #set($discard = $validating.add($document))
    #end
  #end
  #if($fail == 0)
    {{info}}$services.localization.render('workflow.overview.successValidate'){{/info}}
  #end
  #set($moderating = $newModerating)
#elseif($request.publishAll == 'true')
  #set($fail = 0)
  #set($newValidating = [])
  #foreach($document in $validating)
    #set($xdoc = $xwiki.getDocument($document))
    #set($docRef = $xdoc.getDocumentReference())
    #set($result = $services.publicationworkflow.publish($docRef))
    #if(!$result)
      {{warning}}$services.localization.render('workflow.overview.failPublish',[$xdoc]){{/warning}}
      #set($fail = 1) 
      #set($discard = $newValidating.add($document))
    #end
  #end
  #if($fail == 0)
    {{info}}$services.localization.render('workflow.overview.successPublish'){{/info}}
  #end
  #set($validating = $newValidating)
#end

#if($drafts.size() &gt; 0)
  $services.localization.render('workflow.overview.listDrafts')
  #foreach($document in $drafts.entrySet())
    * [[$document.value&gt;&gt;$document.key]]
  #end
#else
  //$services.localization.render('workflow.overview.noDraftDoc')//
#end 

#if($moderating.size() &gt; 0)
  $services.localization.render('workflow.overview.listModerating')
  #foreach($document in $moderating)
    * [[$document]]
  #end

  {{html}}
    &lt;form action='' method='post'&gt;
      &lt;input type='hidden' name='moderateAll' value='true'/&gt;
      &lt;div class='buttonwrapper'&gt;
        &lt;input type='submit' class='button' value="$services.localization.render('workflow.overview.validateAll')"/&gt;
      &lt;/div&gt;
    &lt;/form&gt;
  {{/html}}

#else
  //$services.localization.render('workflow.overview.noModerationDoc')//
#end 

#if($validating.size() &gt; 0)
  $services.localization.render('workflow.overview.listValidating')
  #foreach($document in $validating)
    * [[$document]]
  #end

  {{html}}
    &lt;form action='' method='post'&gt;
      &lt;input type='hidden' name='publishAll' value='true'/&gt; 
      &lt;div class='buttonwrapper'&gt;
        &lt;input type='submit' class='button' value="$services.localization.render('workflow.overview.publishAll')"/&gt;
      &lt;/div&gt;
    &lt;/form&gt;
  {{/html}}

#else
  //$services.localization.render('workflow.overview.noWebmasterDoc')//
#end
{{/velocity}}</content>
</xwikidoc>
